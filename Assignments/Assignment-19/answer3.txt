Loops are constructs in programming that allow you to execute a block of code repeatedly based on a condition. They are essential for tasks that require repetitive actions or iteration through data. They help in reducing code duplication and making the code more manageable and efficient.

Types of Loops in JavaScript
for Loop
while Loop
do...while Loop
for...in Loop
for...of Loop


1. for Loop
The for loop is used when the number of iterations is known beforehand. It consists of three parts: initialization, condition, and increment/decrement.

Syntax:

for (initialization; condition; increment) {
  // code to be executed
}
Example:
for (let i = 0; i < 5; i++) {
  console.log(i);
}
This loop prints numbers from 0 to 4. The loop initializes i to 0, checks if i is less than 5, and increments i by 1 after each iteration.



2. while Loop
The while loop is used when the number of iterations is not known and depends on a condition. It executes the code block as long as the condition is true.

Syntax:
while (condition) {
  // code to be executed
}
Example:
let i = 0;
while (i < 5) {
  console.log(i);
  i++;
}
This loop also prints numbers from 0 to 4. It initializes i outside the loop and increments it inside the loop, running as long as i is less than 5.






3. do...while Loop
The do...while loop is similar to the while loop, but it guarantees that the code block will execute at least once because the condition is checked after the block of code executes.

Syntax:
do {
  // code to be executed
} while (condition);
Example:
let i = 0;
do {
  console.log(i);
  i++;
} while (i < 5);
This loop prints numbers from 0 to 4, executing the code block at least once before checking the condition.





4. for...in Loop
The for...in loop is used to iterate over the enumerable properties of an object. It is primarily used for objects, not arrays.

Syntax:
for (let key in object) {
  // code to be executed
}
Example:
const person = { name: "John", age: 30, city: "New York" };

for (let key in person) {
  console.log(key + ": " + person[key]);
}
This loop prints each property of the person object and its corresponding value.




5. for...of Loop
The for...of loop is used to iterate over iterable objects such as arrays, strings, maps, etc. It is more suitable for arrays and other iterable data structures compared to for...in.

Syntax:
for (let item of iterable) {
  // code to be executed
}
Example=
const numbers = [1, 2, 3, 4, 5];

for (let number of numbers) {
  console.log(number);
}
This loop prints each element of the numbers array.

